#compdef nkdrac

_nkdrac() {
  local curcontext="$curcontext" state
  local -a mainopts

  mainopts=(
  'setUser:Configure  the DRAC user'
  'setNetwork:Set the DRAC network configuration'
  'reset:Reset the DRAC configuration'
  'update:Update the DRAC firmware'
  )
  _arguments -C \
    '1: :->command'\
    '*: :->args'

  if [[ "$state" == "args" ]]; then
    case "${words[2]}" in
      "setUser")
        _arguments \
          '(-u --username)'{-u,--username}'[Username to use (default: admin) Default value: admin]' \
          '(-p --password)'{-p,--password}'[Set the password for user (default: random)]' \
          '(-i --id)'{-i,--id}'[Specify the user ID to set (default: 2). Must be 2-16.  Default value: 2]' \
          '*:Drac Directory:_path_files'
        ;;

      "setNetwork")
        _arguments \
          '*:Drac Directory:_path_files'
        ;;

      "reset")
        _arguments \
          '(-y --assume-yes)'{-y,--assume-yes}'[Assume yes to prompts]' \
          '*:Drac Directory:_path_files'
        ;;

      "update")
        _arguments \
          '(-u --firmware-url)'{-u,--firmware-url}'[Use a specific firmware package instead of the latest]' \
          '(-y --assume-yes)'{-y,--assume-yes}'[Assume yes to prompts]' \
          '*:Drac Directory:_path_files'
        ;;

      "*")
        ;;
    esac
  else
    _describe -t commands " Sub commands " mainopts
  fi
}

_nkdrac "$@"

compdef _nkdrac nkdrac

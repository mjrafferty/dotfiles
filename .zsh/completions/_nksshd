#compdef nksshd

_nksshd() {
  local curcontext="$curcontext" state
  local -a mainopts

  mainopts=(
  'userControl:Create and modify users'
  'userInfo:Display info about a user'
  )
  _arguments -C \
    '1: :->command'\
    '*: :->args'

  if [[ "$state" == "args" ]]; then
    case "${words[2]}" in
      "userControl")
        _arguments \
          '--create[Create the user if it doesnâ€™t exist]' \
          '(-r --reset-failures)'{-r,--reset-failures}'[Reset the failed authentication count]' \
          '(-s --enable-ssh)'{-s,--enable-ssh}'[Enable SSH access for the user]' \
          '(-p --password)'{-p,--password}'[Set the password for the user, if no argument is given a password will be generated.]' \
          '(-a --auto)'{-a,--auto}'[Equivalent to -r -p -s]' \
          '(-S --shell)'{-S,--shell}'[Set the shell for the user]' \
          '(-R --root)'{-R,--root}'[Grant the user superuser privileges (wheel membership)]' \
          '(-e --expiration)'{-e,--expiration}'[Set the expiration for the user, in day offsets (+7 for a week, 0 to disable)]' \
          '(-i --allowed-ips)'{-i,--allowed-ips}'[Comma-separated list of IPs to allow for SSH access]' \
          '*:Magento Directory:_path_files -/'
        ;;

      "userInfo")
        _arguments \
          '*:Magento Directory:_path_files -/'
        ;;

      "*")
        ;;
    esac
  else
    _describe -t commands " Sub commands " mainopts
  fi
}

_nksshd "$@"

compdef _nksshd nksshd

#! /bin/awk -f

# Shows hits per hour by default. Assign a value to i to change interval.
# i.e hitsper i=5   is hits per 5 minute interval

BEGIN {

  YEAR=strftime("%Y");
  REGEX=YEAR":..:.."

  max=0;
  tstart=0;
  tstop=0;

  if(length(i)==0){
    i=60
  }
}

{

  start = match($0,REGEX) + 5
  stop = 5

  split(substr($0,start,stop),temp,":");

  timestamp=sprintf("%02s:%02s",temp[1],(int(temp[2] / i) * i))

  if(tstart==0){
    tstart=timestamp;
  }

  hits[timestamp]++
}

END {

  WHITE="\033[1;37m"
  BLUE="\033[1;34m"
  GREEN="\033[1;32m"

  tstop=timestamp;

  if( 60 % i != 0 ){
    printf "Increment variable 'i' must divide evenly into 60\n"
    exit 1;
  }

  # Find highest number of hits
  for(x in hits){
    if(hits[x]>max){
      max=hits[x]
    }
  }

  # Fills in times when there are zero hits to improve visualization
  tinc=tstart;
  while(tinc!=tstop){
    hits[tinc]+=0;

    split(tinc,ttemp,":");

    ttemp[2]+=i;

    if(ttemp[2]>=60){
      ttemp[1]++;
      ttemp[2]=ttemp[2]%60;
    }

    tinc=sprintf("%02s:%02s",ttemp[1],ttemp[2]);
  }

  # Sort the array because awk
  n=asorti(hits,hits2)

  printf "\n";

  # Print the graph
  for (x=1;x<=n;x++){
    printf "%s\t%s\t",WHITE hits2[x],BLUE hits[hits2[x]];

    # Print the dots
    for (y=0; y<(hits[hits2[x]] * 100 / max);y++)
    {
      printf "%s",GREEN"*";
    }

    printf "\n"
  }
  printf "\n"
}

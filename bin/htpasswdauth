#! /bin/bash

## Generate or update .htpasswd file to add username

readonly ARGS="$*"
readonly ARGA=("$@")

readonly PREFIX=".htpasswd"
readonly TEMP_EXT="_$(uuidgen)"

_usage() {
  cat <<- EOF

  Usage: htpasswdauth [-u|--user username] [-p|--pass password] [-l length]

  Ex: htpasswdauth -u username -p passwod
  Ex: htpasswdauth -u username -l 5
  Ex: htpasswdauth -u username

EOF
}

_addAuth () {

  local htaccess auth_file

  htaccess="$1";
  auth_file="$2";

  if [[ -e "$htaccess" ]]; then
    mv "$htaccess" "$htaccess${TEMP_EXT}"
  fi

  cat <<- EOF | sudo -u $(getusr) tee $htaccess > /dev/null
# ----- Begin Basic Authentication -----
AuthUserFile $auth_file
AuthGroupFile /dev/null
AuthName \"Authorized Access Only\"
AuthType Basic
Require valid-user
# ----- End Basic Authentication -----

EOF

  if [[ -e "$htaccess${TEMP_EXT}" ]]; then
    cat "$htaccess${TEMP_EXT}" >> "$htaccess"
  fi

}

main () {

  local user pass protected_dir site_dir auth_file htaccess;

  for ((x=0;x<${#ARGA[@]};x++)); do
    case "${ARGA[$x]}" in
      "-h"|"--help")
        _usage;
        exit;
        ;;
      "-u"|"--user")
        user="${ARGA[$((++x))]}";
        ;;
      "-p"|"--pass")
        pass="${ARGA[$((++x))]}";
        ;;
      "-d"|"--directory")
        protected_dir="${ARGA[$((++x))]}";
        ;;
      *);;
    esac
  done

  # Get username
  if [[ -z "$user" ]]; then
    read -rp "Username: " user;
  fi;

  # Set password
  if [[ -z "$pass" ]]; then
    pass=$(xkcd);
  fi

  if [[ -z "$protected_dir" ]]; then
    protected_dir="$(pwd)";
  fi

  htaccess="${protected_dir}/.htaccess"
  site_dir="$(echo "$protected_dir" | grep -Po '.*home/[^/]*/[^/]*')"
  auth_file="${site_dir}/${PREFIX}_$(echo "$protected_dir" | grep -Po 'html/\K.*' | tr '/' '-')"

  # Write information to file
  if [[ -e "$auth_file" ]]; then
    sudo -u "$(getusr)" htpasswd -mb "$auth_file" "$user" "$pass";
  else
    sudo -u "$(getusr)" htpasswd -cmb "$auth_file" "$user" "$pass";
  fi;

  _addAuth "$htaccess" "$auth_file"

  # Display configured username and password
  echo -e "\nUsername: $user\nPassword: $pass\nAuth File: $auth_file\n";

}

main;

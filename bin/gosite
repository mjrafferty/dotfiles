#! /bin/bash

# Check parameters
if [[ ! $1 ]]; then
	printf "No domain given. This command requires a domain as an argument.\n";
	exit 1;
elif [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]] || [[ "$1" == "help" ]]; then
	printf "Usage: findsite [DOMAIN]\n\n";
	printf "[DOMAIN] must be the target domain you wish to locate.\n";
	exit 1;
fi

# Trim any fat off the domain name
domain=$(echo "$1" | sed -r -e 's_https?://__' -e 's_/$__' | tr "[:upper:]" "[:lower:]");

# Get ip and registration info
ip_addr="$(dig +short "$domain" | head -n1)";
whoisinfo="$(whois "$ip_addr")";

# If site pointed at nexcess
nexcess=$(echo "$whoisinfo"  | grep -m1 -io nexcess);

_login () {

	local ident_file dest;

	dest="$1";
	ident_file=${HOME}/.ssh/nex$(whoami).id_rsa;

	if [[ -d ~/dotfiles/ ]]; then
		if [[ $(stat -c '%a' ~/dotfiles/) -ne 700 ]]; then
			chmod 700 ~/dotfiles;
		fi;
		rsync -q --chmod=o-rwx -rpt \
			--exclude '*history' \
			--exclude '.ssh' \
			--exclude 'clients' \
			--exclude '.zcompdump*' \
			--exclude '.mytop' \
			--exclude '.git' \
			--exclude 'YouCompleteMe' \
			--exclude 'no-rsync' \
			--exclude '.vimfiles/*/.*' \
			~/dotfiles/ \
			-e "ssh -q -i ${ident_file} -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PasswordAuthentication=no" \
			"nex$(whoami)@$dest":~/ &&
			ssh -i "${ident_file}" \
			-o UserKnownHostsFile=/dev/null \
			-o StrictHostKeyChecking=no \
			-o PasswordAuthentication=no \
			"nex$(whoami)@$dest";
		echo -ne "\ek$(hostname)\e\\";
	fi;
}

_uuid2fqdn () {
	curl -sG "http://yy-puppetdb02.us-midwest-1.nexcess.net:8080/pdb/query/v4/nodes/$*/facts" \
		--data "query=$(urlencode '["=", "name", "fqdn"]')" \
		| grep -oP '(?<=value":")[^"]*'
}

_uuid2ip () {
	curl -sG "http://yy-puppetdb02.us-midwest-1.nexcess.net:8080/pdb/query/v4/nodes/$*/facts" \
		--data "query=$(urlencode '["=", "name", "ipaddress"]')" \
		| grep -oP '(?<=value":")[^"]*'
}

_urlencode () {
	echo -ne "$1" \
		| xxd -plain \
		| tr -d '\n' \
		| sed 's/\(..\)/%\1/g'
}

_findsite () {

	query="[\"and\", [\"=\", \"name\", \"domains\" ], [\"=\", \"value\", \"$1\"]]"

	servers=$(curl -sG 'http://yy-puppetdb02.us-midwest-1.nexcess.net:8080/pdb/query/v4/fact-contents' \
		--data "query=$(_urlencode "$query")" \
		| grep -oP '(?<=certname":")[^"]*');

	if [[ -z "$servers" ]]; then
		printf "Site not found: %s\n" "$domain";
		return 1;
	fi
	for uuid in $servers; do
		_uuid2fqdn "$uuid" | tr '\n' '\t';
		_uuid2ip "$uuid";
	done
}

if [ "$nexcess" ]; then
	_login "${ip_addr}";
else

	# If site not pointed at nexcess
	findsitelist=$(_findsite "$domain");

	declare -a find_servers find_ips;

	find_servers=($(echo "${findsitelist}" | awk '{print $1}'));
	find_ips=($(echo "${findsitelist}" | awk '{print $2}'));

	echo "${find_servers}";
	echo "${find_servers}";
fi

#! /bin/bash

## Find Joomla information and perform some common tasks

readonly ARGS="$*"
readonly ARGA=("$@")

readonly AWK='/bin/awk'
readonly CUT='/bin/cut'
readonly DATE='/bin/date'
readonly FIND='/bin/find'
readonly GREP='/bin/grep'
readonly GZIP='/bin/gzip';
readonly MYSQL='/usr/bin/mysql'
readonly RM='/bin/rm'
readonly RM='/bin/rm'
readonly SED='/bin/sed'
readonly SLEEP='/bin/sleep'
readonly SORT='/bin/sort'
readonly STAT='/usr/bin/stat'
readonly TAIL='/usr/bin/tail'


_joomlausage(){
  cac <<- EOF

  Usage: nkjoomla [path] OPTION [query]
  -B | --backup .... Backup the Joomla database as the user
  -c | --clear ..... Clear Joomla cache
  -C | --cache ..... Enable/Disable cache
  -e | --execute ... Execute a custom query (use '*' and \\")
  -g | --gzip ...... Enable/Disable $GZIP compression
  -i | --info ...... Display user credentials for database
  -l | --login ..... Log into database using user credentials
  -P | --password .. Update or reset password for a user
  -s | --swap ...... Temporarily swap out user password
  -u | --users ..... Show users configured within the database
  -h | --help ....... Display this help and quit
  When run with no options, returns summary information

EOF
}

_joomlainfo(){
  # Output collected information
  printf "%-18s: %s\n" "Base Path" "$(cd "$SITEPATH" || return; pwd -P)"
  printf "%-18s: %s\n" "Product Name" "$("$GREP" 'const PRODUCT' "$VERFILE" | "$CUT" -d\' -f2) \"$CODENAME\""
  printf "%-18s: %s\n" "Site Title" "$("$GREP" '$sitename ' "$CONFIG" | "$CUT" -d\' -f2)"
  printf "%-18s: %s\n" "Install Date" "$("$STAT" "$VERFILE" | "$AWK" '/Change/ {print $2,$3}' | "$CUT" -d. -f1)"
  printf "%-18s: %s\n" "Encryption Key" "$("$GREP" '$secret' "$CONFIG" | "$CUT" -d\' -f2)"
  printf "%-18s: %s\n" "Version (Date)" "$VERSION"
  printf "%-18s: %s\n" "Front End URL" "http://$(cd "$SITEPATH" || return; pwd -P | "$SED" 's:^/chroot::' | "$CUT" -d/ -f4- | "$SED" 's:/html::')/"
  printf "%-18s: %s\n" "Back End URL" "http://$(cd "$SITEPATH" || return; pwd -P | "$SED" 's:^/chroot::' | "$CUT" -d/ -f4- | "$SED" 's:/html::')/administrator"
  printf "%-18s: %s\n" "Return-Path Email" "$("$GREP" '$mailfrom' "$CONFIG" | "$CUT" -d\' -f2)"
  printf "%-18s: %s\n" "Gzip Compression" "$("$GREP" '$gzip' "$CONFIG" | "$CUT" -d\' -f2 | "$SED" 's/0/Disabled/;s/1/Enabled/')"
  printf "%-18s: %s\n" "DB Connection" "$dbtype://$dbuser:$dbpass@$dbhost/$dbname$(if [[ -n $prefix ]]; then echo ."$prefix*"; fi)"
  printf "%-18s: %s\n" "Session Method" "$("$GREP" '$session' "$CONFIG" | "$CUT" -d\' -f2)"
  printf "%-18s: %s\n" "Cache Method" "$("$GREP" '$cache_handler' "$CONFIG" | "$CUT" -d\' -f2) / $("$GREP" '$caching' "$CONFIG" | "$CUT" -d\' -f2 | "$SED" -e 's/.*0.*/Disabled/' -e 's/.*1.*/Enabled/')"
  echo;

  ## Show installed: components, modules, plugins, and templates
  for x in {Component,Module,Plugin,Template}; do
    printf "%-18s: " "Active ${x}s";
    "$MYSQL" -u"$dbuser" -p"$dbpass" -h "$dbhost" "$dbname" \
      -e "select name,type from ${prefix}extensions where type like \"$x\" and enabled = 1;" 2> /dev/null \
      | "$GREP" -Ev 'name.*type|^plg' | "$SED" 's/ /_/g' | "$SORT" | uniq | "$AWK" '{printf "%s, ",$1}' | "$SED" 's/, $//';
    echo;
    echo;
  done;
}

_joomlasum(){
  echo -e "${BRIGHT}Joomla! \"$CODENAME\": ${RED}$VERSION ${NORMAL}\n${BRIGHT}Connection: ${RED}$dbuser:$dbname$(if [[ -n $prefix ]]; then echo ."$prefix"; fi)${NORMAL}\n";
}

_joomlaconnect(){
  if [[ $runonce -eq 0 ]]; then
    _joomlasum; runonce=1;
  fi && "$MYSQL" -u "$dbuser" -p"$dbpass" -h "$dbhost" "$dbname" -e "$@";
}

_joomlabackup(){
  _joomlasum;
  if [[ -x /usr/bin/pigz ]]; then
    COMPRESS="/usr/bin/pigz";
    echo "Compressing with pigz";
  else
    COMPRESS="/usr/bin/gzip";
    echo "Compressing with gzip";
  fi
  echo "Using: mysqldump --opt --skip-lock-tables -u'$dbuser' -p'$dbpass' -h $dbhost $dbname";
  if [[ -f /usr/bin/pv ]]; then
    mysqldump --opt --skip-lock-tables -u"$dbuser" -p"dbpass" -h "$dbhost" "$dbname" \
      | pv -N 'MySQL-Dump' | $COMPRESS --fast | pv -N 'Compression' > "${dbname}"-"$("$DATE" +%Y.%m.%d-%H.%M)".sql.gz;
  else
    mysqldump --opt --skip-lock-tables -u"$dbuser" -p"$dbpass" -h "$dbhost" "$dbname" \
      | $COMPRESS --fast > "${dbname}"-"$("$DATE" +%Y.%m.%d-%H.%M)".sql.gz;
  fi;
}

main () {

  # Set path to Joomla install
  echo;
  runonce=0;

  if [[ $1 =~ ^-.*$ ]]; then

    SITEPATH='.';
    opt="$1";
    shift;
    param="$*";

  elif [[ -z "$*" ]]; then

    SITEPATH='.';

  else

    SITEPATH="$1";
    opt="$2";
    shift;
    shift;
    param="$*";

  fi;

  # Set path to configuration.php file
  CONFIG="$SITEPATH/configuration.php"

  # Check if there is a Joomla install here (sanity check)
  [[ -f "$CONFIG" ]] || (echo -e "Could not $FIND Joomla install at $SITEPATH\n"; return 1)

  # Gather DB Connection info
  dbtype=$("$GREP" '$dbtype ' "$CONFIG" | "$CUT" -d\' -f2)
  dbhost=$("$GREP" '$host ' "$CONFIG" | "$CUT" -d\' -f2)
  dbuser=$("$GREP" '$user ' "$CONFIG" | "$CUT" -d\' -f2)
  dbpass=$("$GREP" '$password ' "$CONFIG" | "$CUT" -d\' -f2)
  dbname=$("$GREP" '$db ' "$CONFIG" | "$CUT" -d\' -f2)
  prefix=$("$GREP" '$dbprefix ' "$CONFIG" | "$CUT" -d\' -f2)

  # Check location of version file
  if [[ -f "$SITEPATH/libraries/cms/version/version.php" ]]; then
    VERFILE="$SITEPATH/libraries/cms/version/version.php";
  else
    VERFILE="$SITEPATH/libraries/joomla/version.php";
  fi

  # Gather version information
  RELEASE="$("$GREP" 'const RELEASE' "$VERFILE" | "$CUT" -d\' -f2)";
  DEV_LEVEL="$("$GREP" 'const DEV_LEVEL' "$VERFILE" | "$CUT" -d\' -f2)";
  DEV_STATUS="$("$GREP" 'const DEV_STATUS' "$VERFILE" | "$CUT" -d\' -f2)";
  BUILD="$("$GREP" 'const BUILD' "$VERFILE" | "$CUT" -d\' -f2)";
  RELDATE="$("$GREP" 'const RELDATE' "$VERFILE" | "$CUT" -d\' -f2)";
  CODENAME="$("$GREP" 'const CODENAME' "$VERFILE" | "$CUT" -d\' -f2)";
  VERSION="$RELEASE.$DEV_LEVEL $DEV_STATUS ($RELDATE) $BUILD";


  case $opt in
    -B|--backup)
      _joomlabackup ;;
    -c|--clear)
      cd "$SITEPATH"/cache/ || return 1;
      for x in */; do
        echo "Clearing $x Cache" | "$SED" 's:/::';
        "$FIND" "$x" -type f -exec "$RM" {} \;;
      done;
      cd - &> /dev/null || return;
      ;;
    -C|--cache)
      if "$GREP" -q "caching = '0'" "$CONFIG" 2> /dev/null; then
        "$SED" -i "s/caching = '0'/caching = '1'/" "$CONFIG";
        echo "Caching is ${BRIGHT}${GREEN}Enabled${NORMAL}";
      else
        "$SED" -i "s/caching = '1'/caching = '0'/" "$CONFIG";
        echo "Caching is ${BRIGHT}${GREEN}Disabled${NORMAL}";
      fi;
      ;;
    -e|--execute)
      _joomlaconnect "${param};";
      ;;
    -g|--gzip)
      if "$GREP" -q "gzip = '0'" "$CONFIG" 2> /dev/null; then
        "$SED" -i "s/gzip = '0'/gzip = '1'/" "$CONFIG";
        echo "Gzip is ${BRIGHT}${GREEN}Enabled${NORMAL}";
      else
        "$SED" -i "s/gzip = '1'/gzip = '0'/g" "$CONFIG";
        echo "Gzip is ${BRIGHT}${GREEN}Disabled${NORMAL}";
      fi
      ;;
    -i|--info)
      echo "Database Connection Info:";
      echo -e "\nLoc.Conn: $MYSQL -u'$dbuser' -p'$dbpass' $dbname -h $dbhost \nRem.Conn: $MYSQL -u'$dbuser' -p'$dbpass' $dbname -h $(hostname)\n";
      echo -e "Username: $dbuser \nPassword: $dbpass \nDatabase: $dbname $(if [[ -n $prefix ]]; then echo \\nPrefix..: "$prefix"; fi) \nLoc.Host: $dbhost \nRem.Host: $(hostname)";
      ;;
    -l|--login) "$MYSQL" -u "$dbuser" -p"$dbpass" -h "$dbhost" "$dbname";
      ;;
    -P|--password)
      if [[ -n $param ]]; then
        username=$(echo "$param" | "$AWK" '{print $1}');
        password=$(echo "$param" | "$AWK" '{print $2}');
        _joomlaconnect "UPDATE ${prefix}users SET password = MD5(\"${password}\") WHERE ${prefix}users.username = \"$username\";"
        echo -e "New Joomla Login Credentials:\nUsername: $username\nPassword: $password"
      elif [[ -z $param || $param == '-h' || $param == '--help' ]]; then
        echo -e " Usage: nkjoomla [path] <-P|--password> <username> <password>"
      fi
      ;;
    -s|--swap)
      username=$(_joomlaconnect "SELECT username FROM ${prefix}users ORDER BY id LIMIT 1;" | "$TAIL" -1)
      password=$(_joomlaconnect "SELECT password FROM ${prefix}users ORDER BY id LIMIT 1;" | "$TAIL" -1 | "$SED" 's/\$/\\\$/g')
      _joomlaconnect "UPDATE ${prefix}users SET password=MD5('nexpassword') ORDER BY id LIMIT 1";
      echo -e "You have 20 seconds to login using the following credentials\n"
      echo -e "LoginURL: http://$(cd "$SITEPATH" || return; pwd -P | "$SED" "s:^/chroot::" | "$CUT" -d/ -f4- | "$SED" 's:html/::')/administrator"
      echo -e "Username: $username\nPassword: nexpassword\n"
      for x in {1..20}; do
        "$SLEEP" 1;
        printf ". ";
      done;
      echo
      _joomlaconnect "UPDATE ${prefix}users SET password=\"$password\" ORDER BY id LIMIT 1";
      echo -e "\nPassword has been reverted."
      ;;
    -u|--user)
      if [[ -z $param ]]; then
        _joomlaconnect "select * from ${prefix}users\G";
      elif [[ $param =~ -s ]]; then
        _joomlaconnect "select id,username,name,email,password from ${prefix}users ORDER BY id";
      elif [[ $param == '-h' || $param == '--help' ]]; then
        echo -e " Usage: nkjoomla [path] <-u|--user> [-s|--short]";
      fi
      ;;
    -h|--help)
      _joomlausage;
      return 0;
      ;;
    * )
      _joomlainfo
      ;;
  esac;
  echo
}

main "$@";

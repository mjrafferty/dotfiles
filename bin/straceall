#! /usr/bin/env bash

readonly ARGA=("$@")

readonly OUTPUT_DIR="$HOME/straceall"

readonly CAT='/bin/cat'
readonly DATE='/bin/date'
readonly MKDIR='/bin/mkdir'
readonly PGREP='/usr/bin/pgrep'
readonly STRACE='/usr/bin/strace'

_usage() {

  "$CAT" <<- EOF
  This is the usage
EOF

}

_cmdline() {

  local x;

  for x in ${ARGA[*]}; do

    case "$x" in
      "--help"|"-h")
        args="${args}-h "
        ;;
      "--user"|"-u")
        args="${args}-u "
        ;;
      "--process"|"-p")
        args="${args}-p "
        ;;
      "--"*)
        echo "$x is not a supported option." >&2
        ;;
      *)
        args="${args}${x} "
        ;;
    esac

  done


  echo "$args";
}

main () {

  local cmdline pids user process_name outputfile x;

  mapfile -t cmdline < <(_cmdline | tr ' ' '\n');

  while getopts ":hu:p:" OPTION "${cmdline[@]}"; do

    case $OPTION in
      h)
        _usage;
        exit 0;
        ;;
      u)
        user="$OPTARG"
        ;;
      p)
        process_name="$OPTARG"
        ;;
      "?")
        echo "-${OPTARG} is not a supported option." >&2
        ;;
      *);;
    esac

  done

  if [[ -z "$user" ]]; then

    echo "Username is required.";
    exit 1;

  fi

  if [[ -z "$process_name" ]]; then
    process_name="php-fpm";
  fi

  mapfile -t pids < <("$PGREP" -f "$process_name" -u "$user");

  if [[ -z "${pids[0]}" ]]; then

    echo "No PIDs found.";
    exit;

  else

    "$MKDIR" -p "$OUTPUT_DIR" 2> /dev/null

  fi

  echo "Capturing processes...";

  for x in ${pids[*]}; do

    local outputfile;

    outputfile="${OUTPUT_DIR}/${user}_${process_name}_$("$DATE" "+%F-%T")-${x}-strace"

    timeout 5 "$STRACE" -fTrvs200000 -o "$outputfile" -p "$x" &

  done

  wait;

  echo;
  echo "Output saved to ${OUTPUT_DIR}";
  echo;

}

main;

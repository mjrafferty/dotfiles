#! /bin/bash


#compctl -w '-d -e -f -h --list -m -n -p -r -s -x' iworxcredz
## list users, or reset passwords for ftp/siteworx/reseller/nodeworx

# generate a password using the xkcd function
genpass(){
	if [[ $1 == '-m' ]]; then newpass=$(mkpasswd -l 15);
	elif [[ $1 == '-x' ]]; then newpass=$(xkcd);
	elif [[ $1 == '-p' ]]; then newpass="$2";
	else newpass=$(xkcd); fi
}

if [[ $1 == '-d' ]]; then primarydomain=$2; shift; shift;
else primarydomain=$(~iworx/bin/listaccounts.pex | awk "/$(getusr)/"'{print $2}'); fi

case $1 in
	-e ) # listing/updating email passwords
		if [[ -z $2 || $2 == '--list' ]]; then
			echo -e "\n----- emailaddresses -----"
			for x in /home/$(getusr)/var/*/mail/*/maildir/; do echo $(echo $x | awk -f/ '{print $7"@"$5}'); done; echo
			else
				emailaddress=$2; genpass $3 $4
				~vpopmail/bin/vpasswd $emailaddress $newpass
				echo -e "\nloginurl: https://$(servername):2443/webmail\nusername: $emailaddress\npassword: $newpass\n"
			fi
			;;

		-f ) # listing/updating ftp users
			if [[ -z $2 || $2 == '--list' ]]; then
				echo; (echo "shortname fullname"; sudo -u $(getusr) siteworx -unc ftp -a list) | column -t; echo
			elif [[ $2 == '.' ]]; then
				ftpuser='ftp'; genpass $3 $4
				sudo -u $(getusr) siteworx -u --login_domain $primarydomain -n -c ftp -a edit --password $newpass --confirm_password $newpass --user $ftpuser
				echo -e "\nfor testing: \nlftp -e'ls;quit' -u ${ftpuser}@${primarydomain},'$newpass' $(servername)"
				echo -e "\nhostname: $(servername)\nusername: ${ftpuser}@${primarydomain}\npassword: $newpass\n"
			else
				ftpuser=$2; genpass $3 $4;
				sudo -u $(getusr) siteworx -u --login_domain $primarydomain -n -c ftp -a edit --password $newpass --confirm_password $newpass --user $ftpuser
				echo -e "\nfor testing: \nlftp -e'ls;quit' -u ${ftpuser}@${primarydomain},'$newpass' $(servername)"
				echo -e "\nhostname: $(servername)\nusername: ${ftpuser}@${primarydomain}\npassword: $newpass\n"
			fi
			;;

		-s ) # listing/updating siteworx users
			if [[ -z $2 || $2 = '--list' ]]; then
				echo; (echo "emailaddress name status"; sudo -u $(getusr) siteworx -unc users -a listusers | sed 's/ /_/g' | awk '{print $2,$3,$5}') | column -t; echo
			elif [[ $2 == '.' ]]; then # lookup primary domain and primary email address
				primaryemail=$(nodeworx -unc siteworx -a querysiteworxaccounts --domain $primarydomain --account_data email)
				genpass $3 $4
				nodeworx -unc siteworx -a edit --password "$newpass" --confirm_password "$newpass" --domain $primarydomain
				echo -e "\nloginurl: https://$(servername):2443/siteworx/?domain=$primarydomain\nusername: $primaryemail\npassword: $newpass\ndomain: $primarydomain\n"
			else # update password for specific user
				emailaddress=$2; genpass $3 $4
				sudo -u $(getusr) siteworx -unc users -a edit --user $emailaddress --password $newpass --confirm_password $newpass
				echo -e "\nfor testing:\nsiteworx --login_email $emailaddress --login_password $newpass --login_domain $primarydomain"
				echo -e "\nloginurl: https://$(servername):2443/siteworx/?domain=$primarydomain\nusername: $emailaddress\npassword: $newpass\ndomain: $primarydomain\n"
			fi
			;;

		-r ) # listing/updating reseller users
			if [[ -z $2 || $2 == '--list' ]]; then # list out resellers nicely
				echo; (echo "id reseller_email name"; nodeworx -unc reseller -a listresellers | sed 's/ /_/g' | awk '{print $1,$2,$3}') | column -t; echo
			else # update password for specific reseller
				resellerid=$2; genpass $3 $4
				nodeworx -unc reseller -a edit --reseller_id $resellerid --password $newpass --confirm_password $newpass
				emailaddress=$(nodeworx -unc reseller -a listresellers | grep ^$resellerid | awk '{print $2}')
				echo -e "\nfor testing:\nnodeworx --login_email $emailaddress --login_password $newpass"
				echo -e "\nloginurl: https://$(servername):2443/nodeworx/\nusername: $emailaddress\npassword: $newpass\n\n"
			fi
			;;

		-m ) # listing/updating mysql users
			if [[ -z $2 || $2 == '--list' ]]; then
				echo; ( echo -e "username   databases"
				sudo -u $(getusr) siteworx -unc mysqluser -a listmysqlusers | awk '{print $2,$3}' ) | column -t; echo
			else
				genpass $3 $4
				dbs=$(sudo -u $(getusr) siteworx -unc mysqluser -a listmysqlusers | grep "$2" | awk '{print $3}' | sed 's/,/, /')
				sudo -u $(getusr) siteworx -unc mysqluser -a edit --name $(echo $2 | sed "s/$(getusr)_//") --password $newpass --confirm_password $newpass
				echo -e "\nfor testing: \nmysql -u'$2' -p'$newpass' $(echo $dbs | cut -d, -f1)"
				echo -e "\nusername: $2\npassword: $newpass\ndatabases: $dbs\n"
			fi
			;;

		-n ) # listing/updating nodeworx users
			if [[ -z $2 || $2 == '--list' ]]; then # list nodeworx (non-nexcess) users
				echo; (echo "email_address name"; nodeworx -unc users -a list | grep -v nexcess.net | sed 's/ /_/g') | column -t; echo
			elif [[ ! $2 =~ nexcess\.net$ ]]; then # update password for specific nodeworx user
				emailaddress=$2; genpass $3 $4
				nodeworx -unc users -a edit --user $emailaddress --password $newpass --confirm_password $newpass
				echo -e "\nfor testing:\nnodeworx --login_email $emailaddress --login_password $newpass"
				echo -e "\nloginurl: https://$(servername):2443/nodeworx/\nusername: $emailaddress\npassword: $newpass\n\n"
			fi
			;;

		-h | --help | * )
			echo -e "\n  for ftp and siteworx, run this from within the user's /home/dir/\n
			usage: iworxcredz option [--list] [user/id] password [newpassword]
			ex: iworxcredz -d secondarydomain -f ftpusername -m
			ex: iworxcredz -f ftpusername -p newpassword
			ex: iworxcredz -s emailaddress -x
			ex: iworxcredz -r --list

			options: (use '--list' to list available users)
			-d [domain] . specify domain for secondary ftp users
			-e [email] .. email users
			-f [user] ... ftp users (default is ftp@primarydomain.tld)
			-s [email] .. siteworx users (default is primary user)
			-r [id] ..... reseller users
			-n [email] .. nodeworx users
			-m [user] ... mysql users

			password: (password generation or input)
			-m ... generate password using mkpasswd
			-x ... generate password using xkcd (default)
			-p ... specify new password directly (-p <password>)\n"; return 0;
			;;

		esac
		unset primarydomain primaryemail emailaddress resellerid newpass # cleanup

#! /bin/bash

## check the usual suspects when things aren't working right

pid_start(){ ps -o lstart --pid=$(pgrep $1 | head -1) 2> /dev/null | tail -1; }

if [[ $@ =~ -h ]]; then
	echo -e "\n  usage: usual_suspects [linecount] [option]\n\n options:
	-q|--quiet .... skip sar and magento log output
	-v|--verbose .. also display users at or near disk quota
	-h|--help ..... show this help output and exit\n";
	return 0;
fi

if [[ $1 =~ [0-9].*$ ]]; then linecount=$1; else linecount=10; fi

## simple service check (web, php, mysql, dns)
echo
format="%-10s %-26s %s\n";
printf "$format" " service" " started" " status";
printf "$format" "--core----" "$(dash 26)" "$(dash 42)";

# need to make sure lsws exist and it's configured to run
# if [[ -x /etc/init.d/lsws && $(chkconfig --list | grep lsws.*3:on) ]]; then
# ^^^ should switch to this if it works right.
if [[ -f /etc/init.d/lsws ]]; then printf "$format" " litespeed" " $(pid_start lite)" " litespeed (pid $(echo $(pgrep lite))) is running ...";
elif [[ -f /etc/init.d/nginx ]]; then printf "$format" " nginx" " $(pid_start nginx)" " $(service nginx status)";
else printf "$format" " apache" " $(pid_start httpd)" " $(service httpd status)"; fi;

	if [[ -f /etc/init.d/php-fpm ]]; then printf "$format" " php-fpm" " $(pid_start php-fpm)" " $(service php-fpm status)"; fi;

		printf "$format" " mysql" " $(pid_start mysqld)" " $(service mysqld status | sed s/' success! '//g)";
		printf "$format" " memcache" " $(pid_start memcached)" " $(service memcached-multi status | head -1)";
		printf "$format" " djbdns" " $(pid_start tinydns)" " tinydns is$(service djbdns status | head -n1 | awk -f: '{print $2}')";
		printf "$format" " proftp" " $(pid_start proftpd)" " $(service proftpd status)";

		printf "$format" "--mail----" "$(dash 26)" "$(dash 42)";
		printf "$format" " clamav" " $(pid_start clamd)" " $(service clamd status)";
		printf "$format" " smtp" " $(pid_start send)" " smtp is$(service smtp status | head -n1 | awk -f: '{print $2}')";
		printf "$format" " pop3" " $(ps -o lstart --pid=$(service pop3-ssl status | grep -eo '[0-9]{2,}\)' | tr -d \) ) | tail -1)" " pop3-ssl$(service pop3-ssl status | awk -f: '{print $2}')";
		printf "$format" " imap4" " $(ps -o lstart --pid=$(service imap4-ssl status | grep -eo '[0-9]{2,}\)' | tr -d \) ) | tail -1)" " imap4-ssl$(service imap4-ssl status | awk -f: '{print $2}')";

		printf "$format" "--other---" "$(dash 26)" "$(dash 42)";
		printf "$format" " snmp" " $(pid_start snmpd)" " $(service snmpd status)";
		printf "$format" " iworx" " $(pid_start iworx)" " $(service iworx status)";

		## check if /var /tmp /chroot are full
		echo -e "\ndisk space and inode usage:"; dash 80; echo;
		for ((i=1 ; i<=$(df | wc -l) ; i++)); do
			df="$(df -h | head -n$i | tail -n1 | awk '{printf "%-12s %-6s %-6s %-6s %-5s",$1,$2,$3,$4,$5}')";
			di="$(df -i | head -n$i | tail -n1 | sed 's/ounted on/ounted_on/g' | awk '{printf "%-9s %-9s %-9s %-6s %s",$2,$3,$4,$5,$6}')";
			if [[ $df =~ [8,9][0-9]\% || $df =~ 1[0-9]{2}\% || $di =~ [8,9][0-9]\% || $di =~ 1[0-9]{2}\% ]]; then color="${bright}${red}"; else color=''; fi
			echo -n "${color}${df} | "; echo "${color}${di}${normal}"
		done

		## check if the server hit apache maxclients or php-fpm max_children
		# look for apache maxclients errors
		if grep -qi maxclients /var/log/httpd/error_log 2> /dev/null; then
			echo -e "\nlast $linecount times httpd hit maxclients"; dash 80; echo;
			grep -i maxclients /var/log/httpd/error_log | tail -n$linecount;
			echo -e "\ncount per day httpd hit maxclients"; dash 80; echo;
			grep -i maxclients /var/log/httpd/error_log | cut -d' ' -f1,2,3,5- | sort | uniq -c;
		fi

		# look for php-fpm max_children errors
		if [[ -f /var/log/php-fpm/error.log ]]; then
			if grep -qi max_children /var/log/php-fpm/error.log 2> /dev/null; then
				echo -e "\nmax_kids: last ($linecount) errors"; dash 80; echo;
				grep -i max_children /var/log/php-fpm/error.log | tail -n$linecount;
				echo -e "\nmax_kids: count/user/day"; dash 80; echo;
				grep -i max_children /var/log/php-fpm/error.log | cut -d' ' -f1,5- | sort | uniq -c;
			fi;
		fi

		if [[ ! $@ =~ -q ]]; then
			## check sar for high ram or cpu usage
			echo -e "\nrecent processor load"; dash 80; echo;
			sar -p | pee "head -n3 | tail -n1" "tail -n$linecount";
			echo -e "\nrecent ram usage"; dash 80; echo;
			sar -r | pee "head -n3 | tail -n1" "tail -n$linecount";

			## if you're in a html directory then check the magento logs
			if [[ -f app/etc/local.xml ]]; then
				echo -e "\nrunning crons from this user:"; dash 80; echo;
				ps aux | head -1; ps aux | awk "(\$1 ~ /$(pwd | sed 's:^/chroot::' | cut -d/ -f3)/) && /cron/"'{print}'; echo
			fi;
			if [[ -f var/log/system.log ]]; then
				echo -e "\nmagento system.log"; dash 80; echo;
				tail -n$linecount var/log/system.log 2> /dev/null; echo;
			fi;
			if [[ -f var/log/exception.log ]]; then
				echo -e "\nmagento exception.log"; dash 80; echo;
				tail -n$linecount var/log/exception.log 2> /dev/null; echo;
			fi;
		fi;

		## if using verbose to check user quotas
		if [[ $@ =~ -v ]]; then checkquota -l; fi;
			echo;


#! /bin/bash

readonly ARGS="$*"
readonly ARGA=("$@")

readonly CAT='/bin/cat'
readonly COLUMN='/usr/bin/column'
readonly GREP='/bin/grep'
readonly SED='/bin/sed'
readonly TR='/usr/bin/tr'
readonly NANO='/bin/nano'

_usage() {
  "$CAT" <<- EOF

When run with no arguments, it will attempt to open the vhost relevant
to your current working directory. If run from a user's home directory,
it will provide a list of their vhosts. It may also be run with a substring
of a domain as an argument to find a vhost.

EOF
}

main () {

  local vhost domain;

  if [[ "$ARGS" =~ --help$|-h$ ]]; then
    _usage;
    return 0;
  fi

  if [  -n "${ARGA[0]}" ]; then

    domain=$(echo "${ARGA[0]}" | "$SED" -r -e 's_https?://__' -e 's_/$__' | "$TR" "[:upper:]" "[:lower:]");

  else

    domain="$(pwd | "$GREP" -Eo '/home/[^/]*(/[^/]*)?')";

  fi

  mapfile -t vhost < <("$GREP" -l "$domain" /etc/httpd/conf.d/vhost_*.conf);

  if [ -z "${vhost[0]}" ]; then

    echo "No vhost found";
    exit;

  elif [  -n "${vhost[1]}" ]; then

    echo "Domain ambiguous. Select vhost:";

    for (( i=0; i<${#vhost[@]}; i++ )); do

      echo "$i  ${vhost[$i]}";

    done \
      | "$COLUMN" -t;

    echo;

    read -rp "Choose vhost number:" selection;

    vhost[0]=${vhost[$selection]};

  fi;

  "${EDITOR:-nano}" "${vhost[0]}";

  echo "${vhost[0]}";

}

main;

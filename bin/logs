#! /bin/bash

# Script Arguments
readonly ARGS="$*"
readonly ARGA=("$@")

# Configurable Variables

# Alias executables to prevent PATH issues

# Necessary Global Variables
LOG_FILES=();

# Print usage
_usage() {

  cat <<- EOF

Obtain data from various logs

  Available logs:

    -f|--ftp        profptd/auth.log proftpd/xfer.log
    -p|--php        All php-fpm/error.log files
    -s|--ssh        /var/log/secure
    -H|--httpd      Apache error log
    -m|--mysqld     MySQLd error log
    -c|--cron       /var/log/cron
    -M|--messages   /var/log/messages
    -i|--imap       IMAP log
    -P|--pop3       POP3 log
    -e|--send       Mail send log
    -E|--smtp       SMTP log
    -l|--letse      Let's Encrypt log
    -d|--domain     Domain's apache and php-fpm error logs
    -t|--transfer   Domain's transfer log
    -A|--magento    Magento logs. Requires an argument. Available
                    logs:

                      system
                      exception
                      debug

  Log operations:

    -T|--tail       Follow log
    -L|--less       Open log in $PAGER
    -C|--cat        Cat out log

    -h|--help       Print this message.

EOF

}

# Convert long command line options into short ones for getopts
_cmdline() {

  local x;

  for x in ${ARGA[*]}; do

    case "$x" in
      "--help"|"-h")
        args="${args}-h "
        ;;
      "--ftp"|"-f")
        args="${args}-f "
        ;;
      "--php"|"-p")
        args="${args}-p "
        ;;
      "--ssh"|"-s")
        args="${args}-s "
        ;;
      "--httpd"|"-H")
        args="${args}-H "
        ;;
      "--mysqld"|"-m")
        args="${args}-m "
        ;;
      "--cron"|"-c")
        args="${args}-c "
        ;;
      "--messages"|"-M")
        args="${args}-M "
        ;;
      "--imap"|"-i")
        args="${args}-i "
        ;;
      "--pop3"|"-P")
        args="${args}-P "
        ;;
      "--send"|"-e")
        args="${args}-e "
        ;;
      "--smtp"|"-E")
        args="${args}-E "
        ;;
      "--letse"|"-l")
        args="${args}-l "
        ;;
      "--domain"|"-d")
        args="${args}-d "
        ;;
      "--transfer"|"-t")
        args="${args}-t "
        ;;
      "--magento"|"-A")
        args="${args}-A "
        ;;
      "--tail"|"-T")
        args="${args}-T "
        ;;
      "--less"|"-L")
        args="${args}-L "
        ;;
      "--cat"|"-C")
        args="${args}-C "
        ;;
      *)
        args="${args}${x} "
        ;;
    esac
  done

  echo "$args";

}

# FTP
_ftp(){

  local f;
  for f in /var/log/proftpd/{auth,xfer}.log; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# PHP-FPM
_php() {

  local f;

  for f in {/var/opt/remi/php*,{/opt/{remi,nexcess}/php*/root,}/var}/log/php-fpm/error.log; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# SSH
_ssh(){

  local f;

  for f in /var/log/secure; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# Apache
_httpd() {

  local f;
  for f in /var/log/httpd/error_log; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# MySQLd
_mysqld() {

  local f;
  for f in /var/log/mysqld.log; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# Cron
_cron() {

  local f;
  for f in /var/log/cron; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# /var/log/messages
_messages() {

  local f;
  for f in /var/log/messages; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# IMAP
_imap() {

  local f;
  for f in /var/log/imap4-ssl/current; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# POP3
_pop3() {

  local f;
  for f in /var/log/pop3-ssl/current; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# /var/log/send
_send() {

  local f;
  for f in /var/log/send/current; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# SMTP
_smtp() {

  local f;
  for f in /var/log/smtp/current; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# Let's Encrypt
_letse() {

  local f;
  for f in /var/log/letsencrypt/letsencrypt.log; do
    if [[ -e $f ]]; then
      LOG_FILES+=("$f");
    fi
  done

}

# Magento
_magento(){

  local f=();
  local l x user domain;

  user=$(pwd | grep -Po '^(/chroot)?/home/\K[^/]*');
  domain=$(pwd | grep -Po '^(/chroot)?/home/[^/]*/\K[^/]*');

  l="$1"

  case $l in
    "system")
      f+=(/home/"${user}"/"${domain}"/html/var/log/system.log)
      ;;
    "exception")
      f+=(/home/"${user}"/"${domain}"/html/var/log/exception.log)
      ;;
    "debug")
      f+=(/home/"${user}"/"${domain}"/html/var/log/debug.log)
      ;;
    "all")
      f+=(/home/"${user}"/"${domain}"/html/var/log/{system,exception,debug}.log)
      ;;
    *);;
  esac

  for x in ${f[*]}; do
    if [[ -e $x ]]; then
      LOG_FILES+=("$x");
    fi
  done
}

# Domain transfer log
_transfer() {

  local f user domain

  user=$(pwd | grep -Po '^(/chroot)?/home/\K[^/]*');
  domain=$(pwd | grep -Po '^(/chroot)?/home/[^/]*/\K[^/]*');

  if [[ -n "$user" && -n "$domain" ]]; then
    for f in /home/$user/var/$domain/logs/transfer{,-{,ssl-}$(date "+%F")}.log; do
      if [[ -e $f && ! -L $f ]]; then
        LOG_FILES+=("$f");
      fi
    done
  fi

}

# Domain php-fpm and apache error log
_domain(){

  local f user domain

  user=$(pwd | grep -Po '^(/chroot)?/home/\K[^/]*');
  domain=$(pwd | grep -Po '^(/chroot)?/home/[^/]*/\K[^/]*');

  if [[ -n "$user" && -n "$domain" ]]; then
    for f in /home/$user/var/{php-fpm,$domain/logs}/error{,-{,ssl-}$(date "+%F")}.log; do
      if [[ -e $f && ! -L $f ]]; then
        LOG_FILES+=("$f");
      fi
    done
  fi

}

# Perform requested action on log files
_act() {

  local cmd="$1"

  if [[ -n "${LOG_FILES[0]}" ]]; then
    case $cmd in
      "tail")
        tail -fn0 ${LOG_FILES[*]} | tai64nlocal;
        ;;
      "less")
        for i in ${LOG_FILES[*]}; do
          tai64nlocal < "$i" | $PAGER;
        done
        ;;
      "cat")
        cat ${LOG_FILES[*]} \
          | tai64nlocal
        ;;
      *)
        tail -n10 ${LOG_FILES[*]} | tai64nlocal | $PAGER;
        ;;
    esac
  else
    echo "No Logs found";
  fi

}

# Main
main () {

  local cmd;

  while getopts "hfpsHmcMiPeEldtA:TLC" OPTION $(_cmdline); do

    case $OPTION in
      h)
        _usage;
        exit 0;
        ;;
      f)
        _ftp;
        ;;
      p)
        _php;
        ;;
      s)
        _ssh;
        ;;
      H)
        _httpd;
        ;;
      m)
        _mysqld;
        ;;
      c)
        _cron;
        ;;
      M)
        _messages;
        ;;
      i)
        _imap;
        ;;
      P)
        _pop3;
        ;;
      e)
        _send;
        ;;
      E)
        _smtp;
        ;;
      l)
        _letse;
        ;;
      d)
        _domain;
        ;;
      t)
        _transfer;
        ;;
      A)
        _magento "$OPTARG";
        ;;
      T)
        cmd="tail";
        ;;
      L)
        cmd="less";
        ;;
      C)
        cmd="cat";
        ;;
      *);;
    esac
  done

  _act "$cmd";

}

main;

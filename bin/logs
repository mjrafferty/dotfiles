#! /bin/bash

# Script Arguments
readonly ARGS="$*"
readonly ARGA=("$@")

# Configurable Variables

# Alias executables to prevent PATH issues

# Necessary Global Variables

# Print usage
_usage() {

  cat <<- EOF
Obtain data from various logs

    -h|--help

    -f|--ftp
    -p|--php
    -s|--ssh
    -H|--httpd
    -m|--mysqld
    -c|--cron
    -M|--messages
    -i|--imap
    -P|--pop3
    -e|--send
    -E|--smtp
    -l|--letse
    -d|--domain
    -t|--transfer

    -T|--tail
    -O|--open
    -G|--grep

EOF

}

# Convert long command line options into short ones for getopts
_cmdline() {

  local x;

  for x in ${ARGA[*]}; do

    case "$x" in
      "--help"|"-h")
        args="${args}-h "
        ;;
      "--ftp"|"-f")
        args="${args}-f "
        ;;
      "--php"|"-p")
        args="${args}-p "
        ;;
      "--ssh"|"-s")
        args="${args}-s "
        ;;
      "--httpd"|"-H")
        args="${args}-H "
        ;;
      "--mysqld"|"-m")
        args="${args}-m "
        ;;
      "--cron"|"-c")
        args="${args}-c "
        ;;
      "--messages"|"-M")
        args="${args}-M "
        ;;
      "--imap"|"-i")
        args="${args}-i "
        ;;
      "--pop3"|"-P")
        args="${args}-P "
        ;;
      "--send"|"-e")
        args="${args}-e "
        ;;
      "--smtp"|"-E")
        args="${args}-E "
        ;;
      "--letse"|"-l")
        args="${args}-l "
        ;;
      "--domain"|"-d")
        args="${args}-d "
        ;;
      "--transfer"|"-t")
        args="${args}-t "
        ;;
      "--tail"|"-T")
        args="${args}-T "
        ;;
      "--open"|"-O")
        args="${args}-T "
        ;;
      *)
        args="${args}${x} "
        ;;
    esac
  done

  echo "$args";

}

# Main
main () {

  local logFiles=();
  local cmd;

  while getopts "hfpsHmcMiPeEldtTOG" OPTION $(_cmdline); do

    case $OPTION in
      h)
        _usage;
        exit 0;
        ;;
      f)
        local f;
        for f in /var/log/proftpd/{auth,xfer}.log; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      p)
        local f;
        for f in {/var/opt/remi/php*{/opt/{remi,nexcess}/php*/root,}/var/log}/php-fpm/error.log; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      s)
        local f;
        for f in /var/log/secure; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      H)
        local f;
        for f in /var/log/httpd/error_log; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      m)
        local f;
        for f in /var/log/mysqld.log; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      c)
        local f;
        for f in /var/log/cron; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      M)
        local f;
        for f in /var/log/messages; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      i)
        local f;
        for f in /var/log/imap4-ssl/current; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      P)
        local f;
        for f in /var/log/pop3-ssl/current; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      e)
        local f;
        for f in /var/log/send/current; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      E)
        local f;
        for f in /var/log/smtp/current; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      l)
        local f;
        for f in /var/log/letsencrypt/letsencrypt.log; do
          if [[ -e $f ]]; then
            logFiles+=("$f");
          fi
        done
        ;;
      d)
        local f user domain

        user=$(pwd | grep -Po '^(/chroot)?/home/\K[^/]*');
        domain=$(pwd | grep -Po '^(/chroot)?/home/[^/]*/\K[^/]*');

        if [[ -n "$user" && -n "$domain" ]]; then
          for f in /home/$user/var/{php-fpm,$domain/logs}/error.log; do
            if [[ -e $f ]]; then
              logFiles+=("$f");
            fi
          done
        fi
        ;;
      t)
        local f user domain

        user=$(pwd | grep -Po '^(/chroot)?/home/\K[^/]*');
        domain=$(pwd | grep -Po '^(/chroot)?/home/[^/]*/\K[^/]*');

        if [[ -n "$user" && -n "$domain" ]]; then
          for f in /home/$user/var/$domain/logs/transfer.log; do
            if [[ -e $f ]]; then
              logFiles+=("$f");
            fi
          done
        fi
        ;;
      T)
        cmd="tail";
        ;;
      O)
        cmd="open";
        ;;
      *);;
    esac
  done

  if [[ -n "${logFiles[0]}" ]]; then
    case $cmd in
      "tail")
        tail -fn0 ${logFiles[*]} | tai64nlocal;
        ;;
      "open")
        for i in ${logFiles[*]}; do
          tai64nlocal < "$i" | $PAGER;
        done
        ;;
      *)
        tail -n10 ${logFiles[*]} | tai64nlocal | $PAGER;
        ;;
    esac
  else
    echo "No Logs found";
  fi

}

main;

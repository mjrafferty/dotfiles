#! /bin/bash

readonly ARGS="$*"
readonly ARGA=("$@")

readonly LOGDIR="/var/log/send"
readonly DBFILE="${HOME}/maildb"

readonly CREATE_DB="CREATE TABLE SENDER(ID INTEGER PRIMARY KEY AUTO_INCREMENT,DATE DATETIME NOT NULL,MESSAGE_ID INTEGER NOT NULL,SENDER VARCHAR(100) NOT NULL) ENGINE=MyISAM; \
  CREATE TABLE RECIPIENT(ID INTEGER PRIMARY KEY AUTO_INCREMENT,DATE DATETIME NOT NULL,DELIVERY_ID INTEGER NOT NULL,MESSAGE_ID INTEGER NOT NULL,QUEUE_TYPE VARCHAR(10) NOT NULL,RECIPIENT VARCHAR(100) NOT NULL,RESPONSE_TYPE VARCHAR(10),RESPONSE_MSG TEXT) ENGINE=MyISAM; \
  CREATE VIEW MAIL AS SELECT SENDER.DATE as \"Sent time\",SENDER.SENDER,RECIPIENT.DATE as \"Receive time\",RECIPIENT.QUEUE_TYPE,RECIPIENT.RECIPIENT,RECIPIENT.RESPONSE_TYPE,RECIPIENT.RESPONSE_MSG FROM SENDER INNER JOIN RECIPIENT ON SENDER.MESSAGE_ID = RECIPIENT.MESSAGE_ID;"

_usage() {
  cat <<- EOF
  This is the usage
EOF
}

_cmdline() {

  local x;

  for x in ${ARGA[*]}; do

    case "$x" in
      "--help"|"-h")
        args="${args}-h "
        ;;
      *)
        args="${args}${x} "
        ;;
    esac

  done

  echo "$args";
}

_m () {
  mysql --defaults-extra-file=/root/.my.cnf --defaults-group-suffix=_root 2> /dev/null
}

_createDb () {

  echo "Creating Database..."

  _m <<- EOF
create database mattmaildb;
create user 'mattmaildb'@'localhost';
set old_passwords=0;
set password for 'mattmaildb'@'localhost' = password('SpawnedTypicalExaltNaked2284');
grant all on \`mattmaildb\`.* to 'mattmaildb'@'localhost';
EOF

echo "$CREATE_DB" \
  | mysql -u'mattmaildb' -D'mattmaildb' -p'SpawnedTypicalExaltNaked2284'

}

_cleanUp () {

  echo "Cleaning up...";

  _m <<- EOF
drop database mattmaildb;
drop user 'mattmaildb'@'localhost';
EOF
}

_parseLogs () {
  awk "
  BEGIN {
  sender_file=\"sender_file\";
  recipient_file=\"recipient_file\";
  update_file=\"update_file\";

  printf \"INSERT INTO SENDER VALUES \" >sender_file;
  printf \"INSERT INTO RECIPIENT VALUES \" >recipient_file;
}

{
  type=\$3;

  if (type==\"info\")
    {
      gsub(/:/,\"\",\$5);
      printf \"(NULL,'%s %s','%s','%s'),\",\$1,\$2,\$5,\$9 >sender_file;
    }
  else if (type==\"starting\")
    {
      gsub(/:/,\"\",\$5);
      printf \"(NULL,'%s %s','%s','%s','%s','%s',NULL,NULL),\",\$1,\$2,\$5,\$7,\$9,\$10 >recipient_file;
    }
  else if (type==\"delivery\")
    {
      gsub(/:/,\"\",\$4);
      gsub(/:/,\"\",\$5);
      gsub(/'/,\"\",\$6);
      printf \"UPDATE RECIPIENT SET RESPONSE_TYPE='%s',RESPONSE_MSG='%s' WHERE DELIVERY_ID='%s' order by ID desc limit 1;\\n\",\$5,\$6,\$4 >update_file;
    }

  }
  END {
    printf \"(NULL,'0000-00-00 00:00:00','NULLish','NULLish');\" >sender_file;
    printf \"(NULL,'0000-00-00 00:00:00','NULLish','NULLish','NULLish','NULLish',NULL,NULL);\" >recipient_file;
    printf \";\" >sender_file;
    printf \";\" >recipient_file;

  }"
}

main () {

  while getopts "h" OPTION $(_cmdline); do

    case $OPTION in
      h)
        _usage;
        exit 0;
        ;;
    esac

  done

  trap "_cleanUp" EXIT;

  _createDb;

  echo "Parsing mail logs..."

  cat ${LOGDIR}/* \
    | tai64nlocal \
    | _parseLogs

  echo "Inserting mail log data(This may take a few minutes)..."

  for x in sender_file recipient_file; do
    cat $x;
  done \
    | mysql -u'mattmaildb' -D'mattmaildb' -p'SpawnedTypicalExaltNaked2284'

  mysql -u'mattmaildb' -D'mattmaildb' -p'SpawnedTypicalExaltNaked2284'

  _cleanUp;

}

main;

#!/usr/bin/env php

<?php

function _parseCmdLine () {

  $shortopts  = "";
  $shortopts .= "d:";   // Required value
  $shortopts .= "u:";   // Required value
  $shortopts .= "p:";   // Required value
  $shortopts .= "m:";   // Required value
  $shortopts .= "s";    // These options do not accept values

  $longopts  = array(
    "domain:",      // Required value
    "user:",        // Required value
    "pass:",        // Required value
    "mode:",        // Required value
    "secure",       // No value
  );

  $cmdline = getopt($shortopts,$longopts);

  foreach ($cmdline as $opt => $value) {

    switch ($opt) {

    case d:
    case domain:
      $domain=$value;
      break;
    case u:
    case user:
      $user=$value;
      break;
    case p:
    case pass:
      $pass=$value;
      break;
    case s:
    case secure:
      $secure=1;
      break;
    case m:
    case mode:
      $mode=$value;
      break;
    default:
      break;

    }

  }

}

function _soapv1 () {

  $client = new SoapClient('http://'.$domain.'/api/soap/?wsdl', array('trace' => 1, 'connection_timeout' => 120));
  $session = $client->login($user, $pass);

  echo $client->__getLastRequest();
  echo $client->__getLastResponse();

  $result = $client->call($session, 'product.list');

}

function _soapv2 () {

  $client = new SoapClient('http://'.$domain.'/api/v2_soap?wsdl=1', array('trace' => 1, 'connection_timeout' => 120));
  $session = $client->login($user, $pass);

  echo $client->__getLastRequest();
  echo $client->__getLastResponse();

  $result = $client->catalogProductList($session);

}

function _soapv2wsi () {

  $client = new SoapClient('http://'.$domain.'/api/v2_soap/?wsdl', array('trace' => 1, 'connection_timeout' => 120));
  $session = $client->login((object)array('username' => $user, 'apiKey' => $pass));

  echo $client->__getLastRequest();
  echo $client->__getLastResponse();

  $result = $client->catalogProductList((object)array('session' => $session->result, 'filters' => null));

}

function _doSoap ($version) {

  try {

    switch ($version) {

    case v1:
      _soapv1();
      break;

    case v2:
      _soapv1();
      break;

    case wsi:
      _soapv2wsi();
      break;

    }

    var_dump($result->result);

  }

  catch (Exception $e) {

    var_dump($e);

  }

  $client->endSession($session);

}

function _start () {

  _parseCmdLine();

  _doSoap();

}

_start();

?>

#! /bin/bash

readonly ARGS="$*"
readonly ARGA=("$@")

readonly CAT='/bin/cat'
readonly CHOWN='/bin/chown'
readonly CUT='/bin/cut'
readonly DATE='/bin/date'
readonly DU='/usr/bin/du'
readonly GZIP='/bin/gzip';
readonly PIGZ='/usr/bin/pigz';
readonly PV='/usr/bin/pv';
readonly TAR='/bin/tar'

_usage() {
  "$CAT" <<- EOF

  Archive a particular target, adding time and date information

  archive <target>

  -e|--exclude  Comma separated list of files or directories
                relateive to target to exclude.

  -t|--target   Target file/directory to create archive from.

EOF
}

# Convert long command line options into short ones for getopts
_cmdline() {

  local x;

  for x in ${ARGA[*]}; do

    case "$x" in
      "--help"|"-h")
        args="${args}-h "
        ;;
      "--exclude"|"-e")
        args="${args}-e "
        ;;
      "--target"|"-t")
        args="${args}-t "
        ;;
      *)
        args="${args}${x} "
        ;;
    esac
  done

  echo "$args";

}

_compress () {

  local target size file

  target="$1";
  file="$2";
  size="$3";

  if [[ -f /usr/bin/pv && -f /usr/bin/pigz ]]; then

    "$TAR" -cf - "$target" "${excludes[@]}" \
      | "$PV" -s "${size}" \
      | "$PIGZ" -c > "$file";

  elif [[ -f /usr/bin/pv ]]; then

    "$TAR" -cf - "$target" "${excludes[@]}" \
      | "$PV" -s "${size}" \
      | "$GZIP" -c > "$file";

  else

    echo "Sorry, no idea how long this will take ...";
    "$TAR" -zcf  "$file" "$target" "${excludes[@]}";

  fi \
    && echo -e "\nArchive created successfully!\n\n$PWD/$file\n";
}

_chown () {

  local file yn user
  file="$1";

  read -rp "Chown file to [r]oot or [u]ser? [r/u]: " yn;

  if [[ $yn = "r" ]]; then

    user='root';

  else

    user=$(getusr);

  fi;

  "$CHOWN" "$user". "$file" \
    && echo -e "Archive owned to $user\n";

}

main () {

  local cmdline target file size sizem;

  mapfile -t cmdline < <(_cmdline | tr ' ' '\n');

  while getopts "he:t:" OPTION "${cmdline[@]}"; do

    case $OPTION in
      h)
        _usage;
        exit 0;
        ;;
      e)
        mapfile -t excludes < <(echo "$OPTARG" | tr ',' '\n')
        for ((i=0;i<${#excludes[@]};i++)); do
          excludes[i]="--exclude=*/${excludes[i]}/*";
        done
        ;;
      t)
        target="$OPTARG";
        ;;
      *);;
    esac
  done

  if [[ -z "$target" ]]; then
    if [[ -e "${ARGA[0]}" ]]; then
      target="${ARGA[0]}"
    else
      echo "No valid target provided.";
      exit 1;
    fi
  fi

  file="${target/\//-}-$("$DATE" +%Y.%m.%d-%H.%M).tgz";
  size=$("$DU" "${excludes[@]}" -sb "$target" | "$CUT" -f1);
  sizem=$(echo "scale=3;$size/1024/1024" | bc);

  printf "Compressing %sM ... please be patient.\n" "$sizem"

  _compress "$target" "$file" "$size";

  [[ -f $file ]] || return 1;

  _chown "$file";

}

main;

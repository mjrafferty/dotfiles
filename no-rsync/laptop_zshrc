source "${HOME}/.zsh/main.zsh"

# Find orphan files not owned by any package
alias orphanfiles="find / \( \
  -path /boot -o \
  -path /usr/src -o \
  -path /proc -o \
  -path /run -o \
  -path /sys -o \
  -path /dev -o \
  -path /home -o \
  -path /etc/ca-certificates -o \
  -path /var/cache -o \
  -path /usr/share/mime -o \
  -path /var/lib/pacman -o \
  -path /var/log/journal -o \
  -path /var/lib/dkms/nvidia/340.106 -o \
  -path /var/lib/sddm/.cache -o \
  -path /var/lib/sddm/.nv/GLCache \
  \) \
  -prune -o -type f -exec pacman -Qo {} + 2>&1 >&- > /dev/null | sed 's/.*owns //'"

export SSH_ASKPASS=/usr/bin/ksshaskpass
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"


organize_pictures() {

  IFS="
"
  SOURCE_DIR="${1}"
  DESTINATION_DIR="${2}"

  for x in "${SOURCE_DIR}" "${DESTINATION_DIR}"; do
    if [[ ! -d "${x}" ]]; then
      echo "${x} is not a valid directory.";
      return 1;
    fi
  done

  for x in $(find "${SOURCE_DIR}" -type f ); do

    date=$(jhead $x 2> /dev/null | grep 'Date/Time');

    if [[ -n $date ]]; then

      year=$(echo $date | cut -d: -f2 | sed 's/^ //');
      month=$(echo $date | cut -d: -f3);

      x=$(echo $x | sed 's/^\.\///');

      echo "mkdir -p ${DESTINATION_DIR:-.}/${year}/${month}";
      echo "mv ${x} ${DESTINATION_DIR:-.}/${year}/${month}/${x##*/}";

    fi;

  done 2> pics_error.log
}

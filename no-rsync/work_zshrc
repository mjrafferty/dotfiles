#! /bin/zsh

#[ -r "${HOME}/.iterm2_shell_integration.zsh" ] \
  #&& source "${HOME}/.iterm2_shell_integration.zsh"

readonly SED='/usr/local/bin/sed'
readonly GREP='/usr/local/bin/grep'
readonly FIND='/usr/local/bin/find'
readonly READLINK='/usr/bin/readlink'

export TERM="screen-256color"

[ -r "${HOME}/.zsh/env.zsh" ] \
  && source "${HOME}/.zsh/env.zsh";
[ -r "${HOME}/.zsh/alias.zsh" ] \
  && source "${HOME}/.zsh/alias.zsh";

#[ -r "${HOME}/.zsh/main.zsh" ] \
  #&& source "${HOME}/.zsh/main.zsh";

alias rm='rm -r'

export PATH="$PATH:${HOME}/.local/bin"

export nex_user_shell="zsh";

update_brew () {

  brew update;
  brew upgrade;
  brew cleanup;

	for f in $(find /usr/local/Cellar/*/*/bin/*); do

		bin="${f##*/}";

		if [[ -e /usr/local/bin/${bin} ]]; then
			rm -f "/usr/local/bin/${bin}";
		fi

		ln -s "$f" "/usr/local/bin/${bin}";

	done

	for f in $(find /usr/local/Cellar/{grep,gnu-sed,gawk,coreutils}/*/bin/g*); do

		bin="${f##*/g}";

		if [[ -e "/usr/local/bin/${bin}" ]]; then
			rm -f "/usr/local/bin/${bin}";
		fi

		ln -s "$f" "/usr/local/bin/${bin}";

	done
}

if [[ ! -e "${HOME}/.zplugin/bin/zplugin.zsh" ]]; then
  rm -r "${HOME}/.zplugin" 2> /dev/null
  mkdir "${HOME}/.zplugin"
  git clone https://github.com/zdharma/zplugin.git ~/.zplugin/bin
fi

source ~/.zplugin/bin/zplugin.zsh
#autoload -Uz _zplugin
#(( ${+_comps} )) && _comps[zplugin]=_zplugin

if [[ ! -e "${HOME}/.zplugin/bin/zmodules/Src/zdharma/zplugin.so" ]]; then
	zplugin module build
fi

module_path+=( "${HOME}/.zplugin/bin/zmodules/Src" )
zmodload zdharma/zplugin

# Install fzf
zplugin ice lucid wait"0b" from"gh-r" as"program"
zplugin load junegunn/fzf-bin

# Install `fzf` bynary and tmux helper script
zplugin ice lucid wait"0c" as"command" pick"bin/fzf-tmux"
zplugin load junegunn/fzf

# Create and bind multiple widgets using fzf
zplugin ice lucid wait"0c" multisrc"shell/{completion,key-bindings}.zsh" id-as"junegunn/fzf_completions" pick"/dev/null"
zplugin load junegunn/fzf

# Fuzzy movement and directory choosing
zplugin ice lucid wait"0c"
zplugin load rupa/z               # autojump command

zplugin ice lucid wait"0c"
zplugin load andrewferrier/fzf-z  # Pick from most frecent folders with `Ctrl+g`

zplugin ice lucid wait"0c"
zplugin load changyuheng/fz       # lets z+[Tab] and zz+[Tab]

# Install `cloc` (code summary) binary if not already installed via package manager
zplugin ice lucid wait"0c" as"command" if'[[ -z "$commands[cloc]" ]]' from"gh-r" bpick"*pl" mv"cloc-* -> cloc";
zplugin load AlDanial/cloc

# Like `z` command, but opens a file in vim based on frecency
zplugin ice lucid wait"0c" as"command" pick"v"
zplugin load rupa/v

# Install `fzy` fuzzy finder, if not yet present in the system
# Also install helper scripts for tmux and dwtm
zplugin ice lucid wait"0b" as"command" if'[[ -z "$commands[fzy]" ]]' make"!PREFIX=$ZPFX install" atclone"cp contrib/fzy-* $ZPFX/bin/" pick"$ZPFX/bin/fzy*"
zplugin load jhawthorn/fzy

# Install fzy-using widgets
zplugin ice lucid wait"0c" atload"bindkey '\ec' fzy-cd-widget; bindkey '^T'  fzy-file-widget"
zplugin load aperezdc/zsh-fzy

# Fuzzy search by `Ctrl+P` a file and open in `$EDITOR`
# Implements it's own fuzzy search
zplugin ice lucid wait"0c"
zplugin load mafredri/zsh-async

# Ctrl-P search and edit file
zplugin ice lucid wait"0c" atload"bindkey '^T'  fzy-file-widget"
zplugin load seletskiy/zsh-fuzzy-search-and-edit
export EDITOR=${EDITOR:-vim}

# Command line REST client
zplugin ice lucid wait"1"
zplugin load micha/resty

# Interactive git helper
zplugin ice lucid wait"0c" has'git'
zplugin load  wfxr/forgit

# Community man pages
zplugin ice lucid wait"0c"
zplugin load tldr-pages/tldr

# Reader pgrogram for tlrd pages
zplugin ice lucid wait"0c" from'gh-r' as'program' wait"0c"
zplugin load isacikgoz/tldr

# Adds additional git functions
zplugin ice lucid wait"0c" as"program" pick"$ZPFX/bin/git-*" make"PREFIX=$ZPFX"
zplugin load tj/git-extras

# Or with most recent Zplugin and with ~/.zplugin/snippeds directory pruned (rm -rf -- ${ZPLGM[SNIPPETS_DIR]}):
zplugin ice lucid wait"0c" svn
zplugin snippet OMZ::plugins/git-extras

zplugin ice lucid wait"0c" svn
zplugin snippet OMZ::plugins/extract

#zplugin ice lucid wait"0c" svn
#zplugin snippet OMZ::plugins/aws

# Interactive git ignore creation
zplugin ice lucid wait"0c"  has'git' pick'init.zsh' atload'alias gi="git-ignore"' blockf
zplugin load laggardkernel/git-ignore

# wd command to warp to directory
zplugin ice lucid wait"0c" as'program' atpull'!git reset --hard' pick'wd.sh' mv'_wd.sh -> _wd' atload'wd() { source wd.sh }; WD_CONFIG="$ZPFX/.warprc"' blockf
zplugin load mfaerevaag/wd

# ZSH completion auto generator?
zplugin ice lucid wait"0b" '[[ -n ${ZLAST_COMMANDS[(r)gcom*]} ]]' atload'gcomp(){ \gencomp $1 && zplugin creinstall -q RobSis/zsh-completion-generator; }' pick'zsh-completion-generator.plugin.zsh'
zplugin load RobSis/zsh-completion-generator

zplugin ice lucid wait"0c" atclone"gencomp k; ZPLGM[COMPINIT_OPTS]='-i' zpcompinit" atpull'%atclone'
zplugin load supercrabtree/k
alias l='k -h'

zplugin ice lucid wait"0c" as"program" atclone="pip install -e . ;pip install -r requirements-dev.txt" atpull"%atclone"
zplugin load donnemartin/haxor-news

# Magento 2 completions
#zplugin ice lucid wait"0c" blockf pick"magento-2.plugin.zsh" atload'unalias m2:home'
#zplugin load dambrogia/oh-my-zsh-plugin-magento-2

# Fancy diff
zplugin ice lucid wait"0c" as"program" pick"bin/git-dsf"
zplugin load zdharma/zsh-diff-so-fancy

# Automatically ls when changing directory
zplugin ice lucid wait"0a"
zplugin load desyncr/auto-ls

# Dot expansion for directory paths
zplugin ice lucid wait'2' pick'manydots-magic' compile'manydots-magic'
zplugin load knu/zsh-manydots-magic

# ZSH theme
zplugin ice lucid pick'prompt_apollo_setup' compile'{modules/*,lib/*}'
zplugin load mjrafferty/apollo-zsh-theme

# Alias reminder
zplugin ice lucid wait"0c" make'!'
zplugin load sei40kr/zsh-fast-alias-tips

# Add command-line online translator
zplugin ice lucid wait"0c" if'[[ -n "$commands[gawk]" ]]'
zplugin load soimort/translate-shell

# Run `fg` command to return to foregrounded (Ctrl+Z'd) vim
zplugin ice lucid wait"0c"
zplugin load mdumitru/fancy-ctrl-z

## Highlighter
zplugin ice lucid wait"0c" pick"h.sh"
zplugin load paoloantinori/hhighlighter

#zplugin ice lucid wait"0a"
zplugin load zdharma/z-p-submods

zplugin ice lucid wait"0c" svn submods"clvv/fasd -> external"
zplugin snippet PZT::modules/fasd

#zplugin ice nocompletions atclone'prompt_zinc_compile' atpull'%atclone' compile"{zinc_functions/*,segments/*,zinc.zsh}"
#zplugin load robobenklein/zinc

# ZINC git info is already async, but if you want it even faster with gitstatus in turbo mode:
# https://github.com/romkatv/gitstatus
#zplugin ice wait'1' atload'zinc_optional_depenency_loaded'
#zplugin load romkatv/gitstatus

zplugin ice lucid wait"0c"
zplugin load romkatv/zsh-prompt-benchmark

# Colored man pages
zplugin ice lucid wait"0c"
zplugin load ael-code/zsh-colored-man-pages

# Makes brackets/parentheses easier to manage on command line
zplugin ice lucid wait"0c" nocompletions
zplugin load hlissner/zsh-autopair

# Shell interpreter
zplugin ice lucid wait"0c" from"gh-r" as"program" mv"shfmt* -> shfmt"
zplugin load mvdan/sh

# ZSH completions
zplugin ice lucid wait"0c" blockf atpull'zplugin creinstall -q .'
zplugin load zsh-users/zsh-completions

# Yank CLI output to clipboard
zplugin ice lucid wait"0c" as"program" pick"yank" make
zplugin load mptre/yank

# LS colors
zplugin ice lucid atclone"dircolors -b LS_COLORS > c.zsh" atpull'%atclone' pick"c.zsh"
zplugin load trapd00r/LS_COLORS

# History serach multi word
zplugin ice lucid wait"0c" compile'{hsmw-*,test/*}'
zplugin load zdharma/history-search-multi-word

# ZSH history substring search
zplugin ice lucid wait"0c" atload'bindkey "$terminfo[kcuu1]" history-substring-search-up; bindkey "$terminfo[kcud1]" history-substring-search-down'
zplugin load zsh-users/zsh-history-substring-search

# ZSH Syntax highlighting
zplugin ice lucid wait'0d' atload"ZPLGM[COMPINIT_OPTS]=\"-C-i\" zpcompinit; zpcdreplay"
zplugin load zdharma/fast-syntax-highlighting

# ZSH Autosuggestions
zplugin ice lucid wait"0e" atload:'_zsh_autosuggest_start' compile'{src/*.zsh,src/strategies/*}'
zplugin load zsh-users/zsh-autosuggestions

export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1


# zstyle ":history-search-multi-word" page-size "8"                      # Number of entries to show (default is $LINES/3)
# zstyle ":history-search-multi-word" highlight-color "fg=yellow,bold"   # Color in which to highlight matched, searched text (default bg=17 on 256-color terminals)
# zstyle ":plugin:history-search-multi-word" synhl "yes"                 # Whether to perform syntax highlighting (default true)
# zstyle ":plugin:history-search-multi-word" active "underline"          # Effect on active history entry. Try: standout, bold, bg=blue (default underline)
# zstyle ":plugin:history-search-multi-word" check-paths "yes"           # Whether to check paths for existence and mark with magenta (default true)
# zstyle ":plugin:history-search-multi-word" clear-on-cancel "no"        # Whether pressing Ctrl-C or ESC should clear entered query

## Syntax highlighting is customized via HSMW_HIGHLIGHT_STYLES associative array. It has keys like reserved-word, alias,
## command, path, etc. which are assigned with strings like fg=blue,bold, to configure how given elements are to be colored.
## If you assign this array before or after loading hsmw you will change the defaults. Complete list of available keys is
## at the beginning of hsmw-highlight file. Example ~/.zshrc addition that sets path key â€“ paths that exist will be
## highlighted with background magenta, foreground white, bold:

# typeset -gA HSMW_HIGHLIGHT_STYLES
# HSMW_HIGHLIGHT_STYLES[path]="bg=magenta,fg=white,bold"

## Following code will enable coloring of options of form "-o" and "--option", with cyan:

# typeset -gA HSMW_HIGHLIGHT_STYLES
# HSMW_HIGHLIGHT_STYLES[single-hyphen-option]="fg=cyan"
# HSMW_HIGHLIGHT_STYLES[double-hyphen-option]="fg=cyan"

## Following code will use 256 colors to highlight command separators (like ";" or "&&"):

# HSMW_HIGHLIGHT_STYLES[commandseparator]="fg=241,bg=17"

# vim:ft=bash
################################################################
# Public IP module

typeset -g RIFF_PUBLIC_IP_FG="white"
typeset -g RIFF_PUBLIC_IP_BG="darkgreen"
typeset -ga RIFF_PUBLIC_IP_METHODS
typeset -g RIFF_PUBLIC_IP_HOST="ipv4.nexcess.net"
typeset -g RIFF_PUBLIC_IP_VPN_INTERFACE
RIFF_PUBLIC_IP_METHODS=(curl)

typeset -gF _RIFF_PUBLIC_IP_TIMESTAMP
typeset -g  _RIFF_PUBLIC_IP

_riff_public_ip_cache_key() {
  _RIFF_RETURN_MESSAGE="1"
}

_riff_public_ip_run() {

  local method ip icon
  icon='PUBLIC_IP_ICON'

  if (( ! $#_RIFF_PUBLIC_IP || EPOCHREALTIME >= _RIFF_PUBLIC_IP_TIMESTAMP + RIFF_PUBLIC_IP_TIMEOUT )); then

    _RIFF_PUBLIC_IP=''

    for method in $RIFF_PUBLIC_IP_METHODS; do

      case $method in
        'dig')
          if (( $+commands[dig] )); then
            command dig +time=1 +tries=1 +short myip.opendns.com @resolver1.opendns.com 2> /dev/null >&${_RIFF_BUFFER_FD}
            read -r -t _RIFF_PUBLIC_IP <&${_RIFF_BUFFER_FD}
            [[ $_RIFF_PUBLIC_IP == ';'* ]] && _RIFF_PUBLIC_IP=''
          fi
        ;;
        'curl')
          if (( $+commands[curl] )); then
            command curl --max-time 10 -w '\n' "$RIFF_PUBLIC_IP_HOST" 2> /dev/null >&${_RIFF_BUFFER_FD}
            read -r -t _RIFF_PUBLIC_IP <&${_RIFF_BUFFER_FD}
          fi
        ;;
        'wget')
          if (( $+commands[wget] )); then
            command wget -T 10 -qO- "$RIFF_PUBLIC_IP_HOST" 2> /dev/null >&${_RIFF_BUFFER_FD}
            read -r -t _RIFF_PUBLIC_IP <&${_RIFF_BUFFER_FD}
          fi
        ;;
      esac

      if [[ -n $_RIFF_PUBLIC_IP ]]; then
        _RIFF_PUBLIC_IP_TIMESTAMP=$EPOCHREALTIME
        break
      fi

    done

  fi

  ip=${_RIFF_PUBLIC_IP:-$RIFF_PUBLIC_IP_NONE}

  if [[ -n $RIFF_PUBLIC_IP_VPN_INTERFACE ]]; then
    _riff_parse_ip $RIFF_PUBLIC_IP_VPN_INTERFACE && icon='VPN_ICON'
  fi

	if [[ -n $ip ]]; then
		_RIFF_RETURN_MESSAGE="${_RIFF_PUBLIC_IP}"
	else
		_RIFF_RETURN_MESSAGE=""
	fi

}
